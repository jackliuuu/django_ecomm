version: "3.9"

services:
  db:
    image: postgres
    container_name: ${IMAGE_NAME}_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
        timeout: 20s
        interval: 10s
        retries: 10
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
  web:
    image: example_tenant:latest
    build: .
    container_name: ${IMAGE_NAME}_web
    restart: always
    user: "${UID}"
    ports:
        - "${WEB_PORT}:8000"
    volumes:
      - .:/opt/app
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  mailserver:
    image: boky/postfix
    container_name: ${IMAGE_NAME}_mailserver
    restart: always
    environment:
        ALLOW_EMPTY_SENDER_DOMAINS: 'true'
        POSTFIX_myhostname: 'postfix'
  redis:
    image: redis:latest
    container_name: ${IMAGE_NAME}_redis
    restart: always
  qcluster: 
    image: example_tenant:latest
    container_name: ${IMAGE_NAME}_qcluster
    restart: always
    entrypoint: /opt/app/django_q/docker-entrypoint.sh
    volumes:
      - .:/opt/app
    depends_on:
      - db
      - redis
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: ${IMAGE_NAME}_es01
    restart: always
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elasticsearch_data:/usr/share/elasticsearch/data # chmod 777
    ports:
        - "9200:9200"